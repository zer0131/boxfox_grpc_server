
[base]
port[int]=8888

# DEBUG INFO WARN ERROR
log_level=DEBUG
log_size[int]=8196

# 公司内部按组划分
group=demo

# group内部项目名称
project=boxfox_grpc_server

# 暂不可用
# true: 从配置中心拉取配置，请保持本地配置和配置中心一致，异常情况会使用本地配置backup
# false: 使用本地配置
# dynamic_config=false

# 不启动grpc和http服务，应对的场景是：hook.go中用户启动自己的服务，只使用godev的部分功能
disable_web_server[bool]=false

# grpc: 代表grpc项目，具有http+json的能力
# http: 代表纯http项目，在router部分功能丰富
# gin: 代表Gin项目
type=grpc

# ip白名单
# [ip_authority]
# white_list[string_array] = 10.188.0.0-10.188.255.25

# 数据库配置
#[mysql_test]
#addr是mysql的地址
#addr=http://10.188.40.114:3306
#数据库名称
#dbname=xxx
#数据库的用户
#user=xxx
#密码
#passwd=xxx
#单位：毫秒
#连接超时时间
#conn_timeout[int]=1000
#读取超时时间
#read_timeout[int]=1000
#写超时时间
#write_timeout[int]=1000
#最大连接数
#max_open_conn_count[int]=50
#最大空闲连接数
#max_idle_conn_count[int]=50
#和dba询问proxy的连接最长持有多久，设置的要比那个短
#conn_max_lifetime[int]=500000
#是否使用mysqlOrm，true-是，false-否
#use_orm[bool]=true
#默认是true,可选参数
#parse_time[bool]=true
#默认是false,可选参数
#orm_log_mode[bool]=true

# redis配置
#[redis_test]
#redis的地址
#addr = http://127.0.0.1:6379
#password可选配置
#password[string] = 123456
#最大同时连接的数量
#max_open_conn_count[int] = 50
#最大同时空闲的连接数量
#max_idle_conn_count[int] = 50
#单位：毫秒
#max_conn_age[int] = 500000
#重试次数
#max_retries[int] = 1
#空闲连接超时时间
#idle_timeout[int] = 300
#连接超时时间
#conn_timeout[int] = 100
#read_timeout[int] = 1000
#write_timeout[int] = 1000
#方式，不配置默认是proxy
#method[string] = sentinel
#sentinel的配置,proxy不需要
#master_name[string] = mymaster

# http服务配置
#[http_test]
#addr[string] = http://10.188.40.13:18888
#keepalive[int] = 50000
#idle_timeout[int] = 90000
#timeout[int] = 1000
#conn_timeout[int] = 100
#max_idle_conn_count[int] = 500
#retry[int] = 3

# es配置
#[esv5_test]
#es的地址
#addr[string] = http://10.188.40.13:9200
#keepalive[int] = 50000
#idle_timeout[int] = 90000
#timeout[int] = 1000
#conn_timeout[int] = 100
#max_idle_conn_count[int] = 500
#retry[int] = 3

# grpc配置
#[grpc_test]
#调用服务的地址(注意斜杠数量)
#addr = passthrough:///127.0.0.1:8839
#conn_timeout[int] = 100
#timeout[int] = 1000
#max_recv_msg_size[int]=128
# group + service名称，打开proto文件可以看到
#service=demo.ExampleServerService
# 1. 直接写github路径，前提是这个路径下有proto文件，并且你有这个路径的clone权限
#import_path=github.com/xxxx/xxxx/proto
# 2. 向被调用服务的开发rd索要sdk，把sdk放到当前目录，注意这块的import_path基于gopath，绝对路径/home/work/godev/gopath/src/YourProjectName，如下：
# import_path=YourProjectName/path/to/sdk

# 自定义配置
[boxfox_grpc_server]
a[int] = 14400
b[int_array] = 30,40
c[string] = str
d[string_array] = str1,str2
e[bool] = true
